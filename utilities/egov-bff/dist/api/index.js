"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getWorkbook = exports.projectCreate = exports.createBoundaryRelationship = exports.createBoundaryEntities = exports.getHierarchy = exports.getBoundaryCodesHandler = exports.getAutoGeneratedBoundaryCodes = exports.processCreate = exports.createProjectCampaignResourcData = exports.processGenericRequest = exports.changeBodyViaElements = exports.getParamsViaElements = exports.confirmCreation = exports.getFacilitiesViaIds = exports.getAllFacilities = exports.createExcelSheet = exports.enrichCampaign = exports.createRelatedResouce = exports.createProjectIfNotExists = exports.createAndUploadFile = exports.getBoundarySheetData = exports.getCount = exports.getResouceNumber = exports.getSchema = exports.getCampaignNumber = exports.searchMDMS = exports.getSheetData = void 0;
var XLSX = __importStar(require("xlsx"));
var config_1 = __importDefault(require("../config"));
var form_data_1 = __importDefault(require("form-data"));
var uuid_1 = require("uuid");
var request_1 = require("../utils/request");
var logger_1 = require("../utils/logger");
var createAndSearch_1 = __importDefault(require("../config/createAndSearch"));
var index_1 = require("../utils/index");
var genericValidator_1 = require("../utils/validators/genericValidator");
var campaignValidators_1 = require("../utils/validators/campaignValidators");
// import { json } from 'body-parser';
var _ = require('lodash');
var getWorkbook = function (fileUrl, sheetName) { return __awaiter(void 0, void 0, void 0, function () {
    var headers, responseFile, workbook, error_1;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                _a.trys.push([0, 2, , 3]);
                headers = {
                    'Content-Type': 'application/json',
                    Accept: 'application/pdf',
                };
                return [4 /*yield*/, (0, request_1.httpRequest)(fileUrl, null, {}, 'get', 'arraybuffer', headers)];
            case 1:
                responseFile = _a.sent();
                workbook = XLSX.read(responseFile, { type: 'buffer' });
                if (!workbook.Sheets.hasOwnProperty(sheetName)) {
                    throw new Error("Sheet with name \"".concat(sheetName, "\" is not present in the file."));
                }
                return [2 /*return*/, workbook];
            case 2:
                error_1 = _a.sent();
                throw Error("Error while fetching sheet");
            case 3: return [2 /*return*/];
        }
    });
}); };
exports.getWorkbook = getWorkbook;
var getSheetData = function (fileUrl, sheetName, getRow) {
    if (getRow === void 0) { getRow = false; }
    return __awaiter(void 0, void 0, void 0, function () {
        var headers, responseFile, workbook, sheetData, jsonData;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    headers = {
                        'Content-Type': 'application/json',
                        Accept: 'application/pdf',
                    };
                    return [4 /*yield*/, (0, request_1.httpRequest)(fileUrl, null, {}, 'get', 'arraybuffer', headers)];
                case 1:
                    responseFile = _a.sent();
                    workbook = XLSX.read(responseFile, { type: 'buffer' });
                    // Check if the specified sheet exists in the workbook
                    if (!workbook.Sheets.hasOwnProperty(sheetName)) {
                        throw new Error("Sheet with name \"".concat(sheetName, "\" is not present in the file."));
                    }
                    sheetData = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName]);
                    jsonData = sheetData.map(function (row, index) {
                        var rowData = {};
                        Object.keys(row).forEach(function (key) {
                            rowData[key] = row[key] === undefined || row[key] === '' ? null : row[key];
                        });
                        if (getRow)
                            rowData['!row#number!'] = index + 1; // Adding row number
                        return rowData;
                    });
                    logger_1.logger.info("Sheet Data : " + JSON.stringify(jsonData));
                    return [2 /*return*/, jsonData];
            }
        });
    });
};
exports.getSheetData = getSheetData;
var searchMDMS = function (uniqueIdentifiers, schemaCode, requestinfo, response) { return __awaiter(void 0, void 0, void 0, function () {
    var apiUrl, data, result, error_2;
    var _a, _b, _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                if (!uniqueIdentifiers) {
                    return [2 /*return*/];
                }
                apiUrl = config_1.default.host.mdms + config_1.default.paths.mdms_search;
                logger_1.logger.info("Mdms url : " + apiUrl);
                data = {
                    "MdmsCriteria": {
                        "tenantId": (_a = requestinfo === null || requestinfo === void 0 ? void 0 : requestinfo.userInfo) === null || _a === void 0 ? void 0 : _a.tenantId,
                        "uniqueIdentifiers": uniqueIdentifiers,
                        "schemaCode": schemaCode
                    },
                    "RequestInfo": requestinfo
                };
                _d.label = 1;
            case 1:
                _d.trys.push([1, 3, , 4]);
                return [4 /*yield*/, (0, request_1.httpRequest)(apiUrl, data, undefined, undefined, undefined, undefined)];
            case 2:
                result = _d.sent();
                logger_1.logger.info("Template search Result : " + JSON.stringify(result));
                return [2 /*return*/, result];
            case 3:
                error_2 = _d.sent();
                logger_1.logger.error("Error: " + error_2);
                return [2 /*return*/, (_c = (_b = error_2 === null || error_2 === void 0 ? void 0 : error_2.response) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.Errors[0].message];
            case 4: return [2 /*return*/];
        }
    });
}); };
exports.searchMDMS = searchMDMS;
var getCampaignNumber = function (requestBody, idFormat, idName, tenantId) { return __awaiter(void 0, void 0, void 0, function () {
    var data, idGenUrl, result;
    var _a, _b, _c, _d;
    return __generator(this, function (_e) {
        switch (_e.label) {
            case 0:
                data = {
                    RequestInfo: requestBody === null || requestBody === void 0 ? void 0 : requestBody.RequestInfo,
                    "idRequests": [
                        {
                            "idName": idName,
                            "tenantId": tenantId,
                            "format": idFormat
                        }
                    ]
                };
                idGenUrl = config_1.default.host.idGenHost + config_1.default.paths.idGen;
                logger_1.logger.info("IdGen url : " + idGenUrl);
                logger_1.logger.info("Idgen Request : " + JSON.stringify(data));
                return [4 /*yield*/, (0, request_1.httpRequest)(idGenUrl, data, undefined, undefined, undefined, undefined)];
            case 1:
                result = _e.sent();
                if ((_b = (_a = result === null || result === void 0 ? void 0 : result.idResponses) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.id) {
                    return [2 /*return*/, (_d = (_c = result === null || result === void 0 ? void 0 : result.idResponses) === null || _c === void 0 ? void 0 : _c[0]) === null || _d === void 0 ? void 0 : _d.id];
                }
                throw new Error("Error during generating campaign number");
        }
    });
}); };
exports.getCampaignNumber = getCampaignNumber;
var getResouceNumber = function (RequestInfo, idFormat, idName) { return __awaiter(void 0, void 0, void 0, function () {
    var data, idGenUrl, result, error_3;
    var _a, _b, _c, _d, _e;
    return __generator(this, function (_f) {
        switch (_f.label) {
            case 0:
                data = {
                    RequestInfo: RequestInfo,
                    "idRequests": [
                        {
                            "idName": idName,
                            "tenantId": (_a = RequestInfo === null || RequestInfo === void 0 ? void 0 : RequestInfo.userInfo) === null || _a === void 0 ? void 0 : _a.tenantId,
                            "format": idFormat
                        }
                    ]
                };
                idGenUrl = config_1.default.host.idGenHost + config_1.default.paths.idGen;
                logger_1.logger.info("IdGen url : " + idGenUrl);
                logger_1.logger.info("Idgen Request : " + JSON.stringify(data));
                _f.label = 1;
            case 1:
                _f.trys.push([1, 3, , 4]);
                return [4 /*yield*/, (0, request_1.httpRequest)(idGenUrl, data, undefined, undefined, undefined, undefined)];
            case 2:
                result = _f.sent();
                if ((_c = (_b = result === null || result === void 0 ? void 0 : result.idResponses) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.id) {
                    return [2 /*return*/, (_e = (_d = result === null || result === void 0 ? void 0 : result.idResponses) === null || _d === void 0 ? void 0 : _d[0]) === null || _e === void 0 ? void 0 : _e.id];
                }
                return [2 /*return*/, result];
            case 3:
                error_3 = _f.sent();
                logger_1.logger.error("Error: " + error_3);
                return [2 /*return*/, error_3];
            case 4: return [2 /*return*/];
        }
    });
}); };
exports.getResouceNumber = getResouceNumber;
var getSchema = function (code, RequestInfo) { return __awaiter(void 0, void 0, void 0, function () {
    var data, mdmsSearchUrl, result, error_4;
    var _a, _b, _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                data = {
                    RequestInfo: RequestInfo,
                    SchemaDefCriteria: {
                        "tenantId": (_a = RequestInfo === null || RequestInfo === void 0 ? void 0 : RequestInfo.userInfo) === null || _a === void 0 ? void 0 : _a.tenantId,
                        "limit": 200,
                        "codes": [
                            code
                        ]
                    }
                };
                mdmsSearchUrl = config_1.default.host.mdms + config_1.default.paths.mdmsSchema;
                logger_1.logger.info("Schema search url : " + mdmsSearchUrl);
                logger_1.logger.info("Schema search Request : " + JSON.stringify(data));
                _d.label = 1;
            case 1:
                _d.trys.push([1, 3, , 4]);
                return [4 /*yield*/, (0, request_1.httpRequest)(mdmsSearchUrl, data, undefined, undefined, undefined, undefined)];
            case 2:
                result = _d.sent();
                return [2 /*return*/, (_c = (_b = result === null || result === void 0 ? void 0 : result.SchemaDefinitions) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.definition];
            case 3:
                error_4 = _d.sent();
                logger_1.logger.error("Error: " + error_4);
                return [2 /*return*/, error_4];
            case 4: return [2 /*return*/];
        }
    });
}); };
exports.getSchema = getSchema;
var getCount = function (responseData, request, response) { return __awaiter(void 0, void 0, void 0, function () {
    var host, url, requestInfo, result, count, error_5;
    var _a, _b, _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                _d.trys.push([0, 2, , 3]);
                host = responseData === null || responseData === void 0 ? void 0 : responseData.host;
                url = (_a = responseData === null || responseData === void 0 ? void 0 : responseData.searchConfig) === null || _a === void 0 ? void 0 : _a.countUrl;
                requestInfo = { "RequestInfo": (_b = request === null || request === void 0 ? void 0 : request.body) === null || _b === void 0 ? void 0 : _b.RequestInfo };
                return [4 /*yield*/, (0, request_1.httpRequest)(host + url, requestInfo, undefined, undefined, undefined, undefined)];
            case 1:
                result = _d.sent();
                count = _.get(result, (_c = responseData === null || responseData === void 0 ? void 0 : responseData.searchConfig) === null || _c === void 0 ? void 0 : _c.countPath);
                return [2 /*return*/, count];
            case 2:
                error_5 = _d.sent();
                logger_1.logger.error("Error: " + error_5);
                throw error_5;
            case 3: return [2 /*return*/];
        }
    });
}); };
exports.getCount = getCount;
function createAndUploadFile(updatedWorkbook, request, tenantId) {
    var _a, _b, _c, _d, _e;
    return __awaiter(this, void 0, void 0, function () {
        var buffer, formData, fileCreationResult, responseData;
        return __generator(this, function (_f) {
            switch (_f.label) {
                case 0:
                    buffer = XLSX.write(updatedWorkbook, { bookType: 'xlsx', type: 'buffer' });
                    formData = new form_data_1.default();
                    formData.append('file', buffer, 'filename.xlsx');
                    formData.append('tenantId', tenantId ? tenantId : (_c = (_b = (_a = request === null || request === void 0 ? void 0 : request.body) === null || _a === void 0 ? void 0 : _a.RequestInfo) === null || _b === void 0 ? void 0 : _b.userInfo) === null || _c === void 0 ? void 0 : _c.tenantId);
                    formData.append('module', 'pgr');
                    logger_1.logger.info("File uploading url : " + config_1.default.host.filestore + config_1.default.paths.filestore);
                    return [4 /*yield*/, (0, request_1.httpRequest)(config_1.default.host.filestore + config_1.default.paths.filestore, formData, undefined, undefined, undefined, {
                            'Content-Type': 'multipart/form-data',
                            'auth-token': (_e = (_d = request === null || request === void 0 ? void 0 : request.body) === null || _d === void 0 ? void 0 : _d.RequestInfo) === null || _e === void 0 ? void 0 : _e.authToken
                        })];
                case 1:
                    fileCreationResult = _f.sent();
                    responseData = fileCreationResult === null || fileCreationResult === void 0 ? void 0 : fileCreationResult.files;
                    return [2 /*return*/, responseData];
            }
        });
    });
}
exports.createAndUploadFile = createAndUploadFile;
function generateHierarchyList(data, parentChain) {
    if (parentChain === void 0) { parentChain = []; }
    var result = [];
    // Iterate over each boundary in the current level
    for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {
        var boundary = data_1[_i];
        var currentChain = __spreadArray(__spreadArray([], parentChain, true), [boundary.code], false);
        // Add the current chain to the result
        result.push(currentChain.join(','));
        // If there are children, recursively call the function
        if (boundary.children.length > 0) {
            var childResults = generateHierarchyList(boundary.children, currentChain);
            result = result.concat(childResults);
        }
    }
    return result;
}
function generateHierarchy(boundaries) {
    // Create an object to store boundary types and their parents
    var parentMap = {};
    // Populate the object with boundary types and their parents
    for (var _i = 0, boundaries_1 = boundaries; _i < boundaries_1.length; _i++) {
        var boundary = boundaries_1[_i];
        parentMap[boundary.boundaryType] = boundary.parentBoundaryType;
    }
    // Traverse the hierarchy to generate the hierarchy list
    var hierarchyList = [];
    for (var boundaryType in parentMap) {
        if (Object.prototype.hasOwnProperty.call(parentMap, boundaryType)) {
            var parentBoundaryType = parentMap[boundaryType];
            if (parentBoundaryType === null) {
                // This boundary type has no parent, add it to the hierarchy list
                hierarchyList.push(boundaryType);
                // Traverse its children recursively
                traverseChildren(boundaryType, parentMap, hierarchyList);
            }
        }
    }
    return hierarchyList;
}
function traverseChildren(parent, parentMap, hierarchyList) {
    for (var boundaryType in parentMap) {
        if (Object.prototype.hasOwnProperty.call(parentMap, boundaryType)) {
            var parentBoundaryType = parentMap[boundaryType];
            if (parentBoundaryType === parent) {
                // This boundary type has the current parent, add it to the hierarchy list
                hierarchyList.push(boundaryType);
                // Traverse its children recursively
                traverseChildren(boundaryType, parentMap, hierarchyList);
            }
        }
    }
}
var getHierarchy = function (request, tenantId, hierarchyType) { return __awaiter(void 0, void 0, void 0, function () {
    var url, requestBody, response, boundaryList, error_6;
    var _a, _b;
    return __generator(this, function (_c) {
        switch (_c.label) {
            case 0:
                url = "".concat(config_1.default.host.boundaryHost).concat(config_1.default.paths.boundaryHierarchy);
                requestBody = {
                    "RequestInfo": (_a = request === null || request === void 0 ? void 0 : request.body) === null || _a === void 0 ? void 0 : _a.RequestInfo,
                    "BoundaryTypeHierarchySearchCriteria": {
                        "tenantId": tenantId,
                        "limit": 5,
                        "offset": 0,
                        "hierarchyType": hierarchyType
                    }
                };
                _c.label = 1;
            case 1:
                _c.trys.push([1, 3, , 4]);
                return [4 /*yield*/, (0, request_1.httpRequest)(url, requestBody)];
            case 2:
                response = _c.sent();
                boundaryList = (_b = response === null || response === void 0 ? void 0 : response.BoundaryHierarchy) === null || _b === void 0 ? void 0 : _b[0].boundaryHierarchy;
                return [2 /*return*/, generateHierarchy(boundaryList)];
            case 3:
                error_6 = _c.sent();
                console.error('Error:', error_6);
                throw error_6;
            case 4: return [2 /*return*/];
        }
    });
}); };
exports.getHierarchy = getHierarchy;
function createExcelSheet(data, headers, sheetName) {
    if (sheetName === void 0) { sheetName = 'Sheet1'; }
    return __awaiter(this, void 0, void 0, function () {
        var workbook, sheetData, ws, columnWidths;
        return __generator(this, function (_a) {
            workbook = XLSX.utils.book_new();
            sheetData = __spreadArray([headers], data, true);
            ws = XLSX.utils.aoa_to_sheet(sheetData);
            columnWidths = headers.map(function () { return ({ width: 30 }); });
            // Apply column widths to the sheet
            ws['!cols'] = columnWidths;
            XLSX.utils.book_append_sheet(workbook, ws, sheetName);
            return [2 /*return*/, { wb: workbook, ws: ws, sheetName: sheetName }];
        });
    });
}
exports.createExcelSheet = createExcelSheet;
function getBoundaryCodesHandler(boundaryList, childParentMap, elementCodesMap, countMap) {
    return __awaiter(this, void 0, void 0, function () {
        var updatedelementCodesMap, error_7;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 2, , 3]);
                    return [4 /*yield*/, getAutoGeneratedBoundaryCodes(boundaryList, childParentMap, elementCodesMap, countMap)];
                case 1:
                    updatedelementCodesMap = _a.sent();
                    return [2 /*return*/, updatedelementCodesMap];
                case 2:
                    error_7 = _a.sent();
                    console.error("Error in getBoundaryCodesHandler:", error_7);
                    throw error_7; // Propagate the error
                case 3: return [2 /*return*/];
            }
        });
    });
}
exports.getBoundaryCodesHandler = getBoundaryCodesHandler;
function getAutoGeneratedBoundaryCodes(boundaryList, childParentMap, elementCodesMap, countMap) {
    return __awaiter(this, void 0, void 0, function () {
        var columnsData, _i, boundaryList_1, row, elementSet, i, column, _a, column_1, element, parentCode, code, grandParentCode, parentBoundaryCode, lastUnderscoreIndex, parentBoundaryCodeTrimmed;
        return __generator(this, function (_b) {
            columnsData = [];
            for (_i = 0, boundaryList_1 = boundaryList; _i < boundaryList_1.length; _i++) {
                row = boundaryList_1[_i];
                row.forEach(function (element, index) {
                    if (!columnsData[index]) {
                        columnsData[index] = [];
                    }
                    if (!columnsData[index].includes(element)) {
                        columnsData[index].push(element);
                    }
                });
            }
            elementSet = new Set();
            columnsData.forEach(function (column) {
                column.forEach(function (element) {
                    elementSet.add(element);
                });
            });
            for (i = 0; i < columnsData.length; i++) {
                column = columnsData[i];
                for (_a = 0, column_1 = column; _a < column_1.length; _a++) {
                    element = column_1[_a];
                    if (!elementCodesMap.has(element)) {
                        parentCode = childParentMap.get(element);
                        if (parentCode !== undefined && parentCode !== null && elementSet.has(parentCode)) {
                            countMap.set(parentCode, (countMap.get(parentCode) || 0) + 1);
                            code = void 0;
                            grandParentCode = childParentMap.get(parentCode);
                            if (grandParentCode != null && grandParentCode != undefined) {
                                parentBoundaryCode = elementCodesMap.get(parentCode);
                                lastUnderscoreIndex = parentBoundaryCode.lastIndexOf('_');
                                parentBoundaryCodeTrimmed = lastUnderscoreIndex !== -1 ? parentBoundaryCode.substring(0, lastUnderscoreIndex) : parentBoundaryCode;
                                code = generateElementCode(countMap.get(parentCode), parentBoundaryCodeTrimmed, element);
                            }
                            else {
                                code = generateElementCode(countMap.get(parentCode), elementCodesMap.get(parentCode), element);
                            }
                            elementCodesMap.set(element, code); // Store the code of the element in the map
                        }
                        else {
                            elementCodesMap.set(element, "ADMIN_" + element.toString().substring(0, 2));
                        }
                    }
                    else {
                        continue;
                    }
                }
            }
            return [2 /*return*/, elementCodesMap];
        });
    });
}
exports.getAutoGeneratedBoundaryCodes = getAutoGeneratedBoundaryCodes;
function generateElementCode(sequence, parentCode, element) {
    var paddedSequence = sequence.toString().padStart(2, '0'); // Pad single-digit numbers with leading zero
    return parentCode + '_' + paddedSequence + '_' + element;
}
function getBoundarySheetData(request) {
    var _a, _b, _c, _d, _e, _f;
    return __awaiter(this, void 0, void 0, function () {
        var url, params, boundaryType, boundaryRelationshipResponse, boundaryData, boundaryList, boundaryCodes, string, boundaryEntityResponse, boundaryCodeNameMapping_1, hierarchy, startIndex, reducedHierarchy_1, headers, data;
        return __generator(this, function (_g) {
            switch (_g.label) {
                case 0:
                    url = "".concat(config_1.default.host.boundaryHost).concat(config_1.default.paths.boundaryRelationship);
                    params = (_a = request === null || request === void 0 ? void 0 : request.body) === null || _a === void 0 ? void 0 : _a.Filters;
                    boundaryType = params === null || params === void 0 ? void 0 : params.boundaryType;
                    return [4 /*yield*/, (0, request_1.httpRequest)(url, request.body, params)];
                case 1:
                    boundaryRelationshipResponse = _g.sent();
                    boundaryData = (_c = (_b = boundaryRelationshipResponse === null || boundaryRelationshipResponse === void 0 ? void 0 : boundaryRelationshipResponse.TenantBoundary) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.boundary;
                    logger_1.logger.info("boundaryData for sheet " + JSON.stringify(boundaryData));
                    if (!boundaryData) return [3 /*break*/, 5];
                    boundaryList = generateHierarchyList(boundaryData);
                    if (!(Array.isArray(boundaryList) && boundaryList.length > 0)) return [3 /*break*/, 5];
                    boundaryCodes = boundaryList.map(function (boundary) { return boundary.split(',').pop(); });
                    string = boundaryCodes.join(', ');
                    return [4 /*yield*/, (0, request_1.httpRequest)(config_1.default.host.boundaryHost + config_1.default.paths.boundaryServiceSearch, request.body, { tenantId: "pg", codes: string })];
                case 2:
                    boundaryEntityResponse = _g.sent();
                    boundaryCodeNameMapping_1 = {};
                    (_d = boundaryEntityResponse === null || boundaryEntityResponse === void 0 ? void 0 : boundaryEntityResponse.Boundary) === null || _d === void 0 ? void 0 : _d.forEach(function (data) {
                        var _a;
                        boundaryCodeNameMapping_1[data === null || data === void 0 ? void 0 : data.code] = (_a = data === null || data === void 0 ? void 0 : data.additionalDetails) === null || _a === void 0 ? void 0 : _a.name;
                    });
                    return [4 /*yield*/, getHierarchy(request, (_e = request === null || request === void 0 ? void 0 : request.query) === null || _e === void 0 ? void 0 : _e.tenantId, (_f = request === null || request === void 0 ? void 0 : request.query) === null || _f === void 0 ? void 0 : _f.hierarchyType)];
                case 3:
                    hierarchy = _g.sent();
                    startIndex = boundaryType ? hierarchy.indexOf(boundaryType) : -1;
                    reducedHierarchy_1 = startIndex !== -1 ? hierarchy.slice(startIndex) : hierarchy;
                    headers = __spreadArray(__spreadArray([], reducedHierarchy_1, true), ["Boundary Code", "Target at the Selected Boundary level", "Start Date of Campaign (Optional Field)", "End Date of Campaign (Optional Field)"], false);
                    data = boundaryList.map(function (boundary) {
                        var boundaryParts = boundary.split(',');
                        var boundaryCode = boundaryParts[boundaryParts.length - 1];
                        var rowData = boundaryParts.concat(Array(Math.max(0, reducedHierarchy_1.length - boundaryParts.length)).fill(''));
                        var mappedRowData = rowData.map(function (cell, index) {
                            return index === reducedHierarchy_1.length ? '' : cell !== '' ? boundaryCodeNameMapping_1[cell] || cell : '';
                        });
                        var boundaryCodeIndex = reducedHierarchy_1.length;
                        mappedRowData[boundaryCodeIndex] = boundaryCode;
                        return mappedRowData;
                    });
                    return [4 /*yield*/, createExcelSheet(data, headers)];
                case 4: return [2 /*return*/, _g.sent()];
                case 5: return [2 /*return*/, { wb: null, ws: null, sheetName: null }]; // Return null if no data found
            }
        });
    });
}
exports.getBoundarySheetData = getBoundarySheetData;
function createProjectAndUpdateId(projectBody, boundaryProjectIdMapping, boundaryCode, campaignDetails) {
    var _a;
    return __awaiter(this, void 0, void 0, function () {
        var projectCreateUrl, projectResponse;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    projectCreateUrl = "".concat(config_1.default.host.projectHost) + "".concat(config_1.default.paths.projectCreate);
                    logger_1.logger.info("Project Creation url " + projectCreateUrl);
                    logger_1.logger.info("Project Creation body " + JSON.stringify(projectBody));
                    return [4 /*yield*/, (0, request_1.httpRequest)(projectCreateUrl, projectBody, undefined, "post", undefined, undefined)];
                case 1:
                    projectResponse = _b.sent();
                    logger_1.logger.info("Project Creation response" + JSON.stringify(projectResponse));
                    (0, genericValidator_1.validatedProjectResponseAndUpdateId)(projectResponse, projectBody, campaignDetails);
                    boundaryProjectIdMapping[boundaryCode] = (_a = projectResponse === null || projectResponse === void 0 ? void 0 : projectResponse.Project[0]) === null || _a === void 0 ? void 0 : _a.id;
                    return [4 /*yield*/, new Promise(function (resolve) { return setTimeout(resolve, 3000); })];
                case 2:
                    _b.sent();
                    return [2 /*return*/];
            }
        });
    });
}
function createProjectIfNotExists(requestBody) {
    var _a, _b, _c;
    return __awaiter(this, void 0, void 0, function () {
        var _d, projectType, tenantId, boundaryProjectIdMapping, _i, _e, campaignDetails, projectBody, projectId, startDate, endDate, boundaryCode, boundaryType, parentBoundaryCode, description, department, referenceID, projectSubType, _f, isTaskEnabled, _g, documents, _h, rowVersion, address;
        return __generator(this, function (_j) {
            switch (_j.label) {
                case 0:
                    _d = requestBody === null || requestBody === void 0 ? void 0 : requestBody.Campaign, projectType = _d.projectType, tenantId = _d.tenantId;
                    (0, index_1.sortCampaignDetails)((_a = requestBody === null || requestBody === void 0 ? void 0 : requestBody.Campaign) === null || _a === void 0 ? void 0 : _a.CampaignDetails);
                    (0, index_1.correctParentValues)((_b = requestBody === null || requestBody === void 0 ? void 0 : requestBody.Campaign) === null || _b === void 0 ? void 0 : _b.CampaignDetails);
                    boundaryProjectIdMapping = {};
                    _i = 0, _e = (_c = requestBody === null || requestBody === void 0 ? void 0 : requestBody.Campaign) === null || _c === void 0 ? void 0 : _c.CampaignDetails;
                    _j.label = 1;
                case 1:
                    if (!(_i < _e.length)) return [3 /*break*/, 4];
                    campaignDetails = _e[_i];
                    projectBody = {
                        RequestInfo: requestBody.RequestInfo,
                        Projects: []
                    };
                    projectId = campaignDetails.projectId, startDate = campaignDetails.startDate, endDate = campaignDetails.endDate, boundaryCode = campaignDetails.boundaryCode, boundaryType = campaignDetails.boundaryType, parentBoundaryCode = campaignDetails.parentBoundaryCode, description = campaignDetails.description, department = campaignDetails.department, referenceID = campaignDetails.referenceID, projectSubType = campaignDetails.projectSubType, _f = campaignDetails.isTaskEnabled, isTaskEnabled = _f === void 0 ? true : _f, _g = campaignDetails.documents, documents = _g === void 0 ? [] : _g, _h = campaignDetails.rowVersion, rowVersion = _h === void 0 ? 0 : _h;
                    address = {
                        tenantId: tenantId,
                        boundary: boundaryCode,
                        boundaryType: boundaryType
                    };
                    startDate = parseInt(startDate);
                    endDate = parseInt(endDate);
                    if (!!projectId) return [3 /*break*/, 3];
                    projectBody.Projects.push({
                        tenantId: tenantId,
                        parent: boundaryProjectIdMapping[parentBoundaryCode] || null,
                        address: address,
                        description: description,
                        department: department,
                        referenceID: referenceID,
                        projectSubType: projectSubType,
                        projectType: projectType,
                        startDate: startDate,
                        endDate: endDate,
                        isTaskEnabled: isTaskEnabled,
                        documents: documents,
                        rowVersion: rowVersion
                    });
                    return [4 /*yield*/, createProjectAndUpdateId(projectBody, boundaryProjectIdMapping, boundaryCode, campaignDetails)];
                case 2:
                    _j.sent();
                    _j.label = 3;
                case 3:
                    _i++;
                    return [3 /*break*/, 1];
                case 4: return [2 /*return*/];
            }
        });
    });
}
exports.createProjectIfNotExists = createProjectIfNotExists;
function createStaff(resouceBody) {
    return __awaiter(this, void 0, void 0, function () {
        var staffCreateUrl, staffResponse;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    staffCreateUrl = "".concat(config_1.default.host.projectHost) + "".concat(config_1.default.paths.staffCreate);
                    logger_1.logger.info("Staff Creation url " + staffCreateUrl);
                    logger_1.logger.info("Staff Creation body " + JSON.stringify(resouceBody));
                    return [4 /*yield*/, (0, request_1.httpRequest)(staffCreateUrl, resouceBody, undefined, "post", undefined, undefined)];
                case 1:
                    staffResponse = _a.sent();
                    logger_1.logger.info("Staff Creation response" + JSON.stringify(staffResponse));
                    (0, genericValidator_1.validateStaffResponse)(staffResponse);
                    return [2 /*return*/];
            }
        });
    });
}
function createProjectResource(resouceBody) {
    return __awaiter(this, void 0, void 0, function () {
        var projectResourceCreateUrl, projectResourceResponse;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    projectResourceCreateUrl = "".concat(config_1.default.host.projectHost) + "".concat(config_1.default.paths.projectResourceCreate);
                    logger_1.logger.info("Project Resource Creation url " + projectResourceCreateUrl);
                    logger_1.logger.info("Project Resource Creation body " + JSON.stringify(resouceBody));
                    return [4 /*yield*/, (0, request_1.httpRequest)(projectResourceCreateUrl, resouceBody, undefined, "post", undefined, undefined)];
                case 1:
                    projectResourceResponse = _a.sent();
                    logger_1.logger.info("Project Resource Creation response" + JSON.stringify(projectResourceResponse));
                    (0, genericValidator_1.validateProjectResourceResponse)(projectResourceResponse);
                    return [2 /*return*/];
            }
        });
    });
}
function createProjectFacility(resouceBody) {
    return __awaiter(this, void 0, void 0, function () {
        var projectFacilityCreateUrl, projectFacilityResponse;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    projectFacilityCreateUrl = "".concat(config_1.default.host.projectHost) + "".concat(config_1.default.paths.projectFacilityCreate);
                    logger_1.logger.info("Project Facility Creation url " + projectFacilityCreateUrl);
                    logger_1.logger.info("Project Facility Creation body " + JSON.stringify(resouceBody));
                    return [4 /*yield*/, (0, request_1.httpRequest)(projectFacilityCreateUrl, resouceBody, undefined, "post", undefined, undefined)];
                case 1:
                    projectFacilityResponse = _a.sent();
                    logger_1.logger.info("Project Facility Creation response" + JSON.stringify(projectFacilityResponse));
                    (0, genericValidator_1.validateProjectFacilityResponse)(projectFacilityResponse);
                    return [2 /*return*/];
            }
        });
    });
}
function createRelatedEntity(resources, tenantId, projectId, startDate, endDate, resouceBody) {
    var _a, _b, _c;
    return __awaiter(this, void 0, void 0, function () {
        var _i, resources_1, resource, type, _d, _e, resourceId, ProjectStaff, ProjectResource, ProjectFacility;
        return __generator(this, function (_f) {
            switch (_f.label) {
                case 0:
                    _i = 0, resources_1 = resources;
                    _f.label = 1;
                case 1:
                    if (!(_i < resources_1.length)) return [3 /*break*/, 10];
                    resource = resources_1[_i];
                    type = resource === null || resource === void 0 ? void 0 : resource.type;
                    _d = 0, _e = resource === null || resource === void 0 ? void 0 : resource.resourceIds;
                    _f.label = 2;
                case 2:
                    if (!(_d < _e.length)) return [3 /*break*/, 9];
                    resourceId = _e[_d];
                    if (!(type == "staff")) return [3 /*break*/, 4];
                    ProjectStaff = {
                        // FIXME : Tenant Id should not be splitted
                        tenantId: (_a = tenantId.split('.')) === null || _a === void 0 ? void 0 : _a[0],
                        projectId: projectId,
                        userId: resourceId,
                        startDate: startDate,
                        endDate: endDate
                    };
                    resouceBody.ProjectStaff = ProjectStaff;
                    return [4 /*yield*/, createStaff(resouceBody)];
                case 3:
                    _f.sent();
                    return [3 /*break*/, 8];
                case 4:
                    if (!(type == "resource")) return [3 /*break*/, 6];
                    ProjectResource = {
                        // FIXME : Tenant Id should not be splitted
                        tenantId: (_b = tenantId.split('.')) === null || _b === void 0 ? void 0 : _b[0],
                        projectId: projectId,
                        resource: {
                            productVariantId: resourceId,
                            type: "DRUG",
                            "isBaseUnitVariant": false
                        },
                        startDate: startDate,
                        endDate: endDate
                    };
                    resouceBody.ProjectResource = ProjectResource;
                    return [4 /*yield*/, createProjectResource(resouceBody)];
                case 5:
                    _f.sent();
                    return [3 /*break*/, 8];
                case 6:
                    if (!(type == "facility")) return [3 /*break*/, 8];
                    ProjectFacility = {
                        // FIXME : Tenant Id should not be splitted
                        tenantId: (_c = tenantId.split('.')) === null || _c === void 0 ? void 0 : _c[0],
                        projectId: projectId,
                        facilityId: resourceId
                    };
                    resouceBody.ProjectFacility = ProjectFacility;
                    return [4 /*yield*/, createProjectFacility(resouceBody)];
                case 7:
                    _f.sent();
                    _f.label = 8;
                case 8:
                    _d++;
                    return [3 /*break*/, 2];
                case 9:
                    _i++;
                    return [3 /*break*/, 1];
                case 10: return [2 /*return*/];
            }
        });
    });
}
function createRelatedResouce(requestBody) {
    var _a;
    return __awaiter(this, void 0, void 0, function () {
        var tenantId, _i, _b, campaignDetails, resouceBody, projectId, startDate, endDate, resources;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    tenantId = (requestBody === null || requestBody === void 0 ? void 0 : requestBody.Campaign).tenantId;
                    _i = 0, _b = (_a = requestBody === null || requestBody === void 0 ? void 0 : requestBody.Campaign) === null || _a === void 0 ? void 0 : _a.CampaignDetails;
                    _c.label = 1;
                case 1:
                    if (!(_i < _b.length)) return [3 /*break*/, 4];
                    campaignDetails = _b[_i];
                    resouceBody = {
                        RequestInfo: requestBody.RequestInfo,
                    };
                    projectId = campaignDetails.projectId, startDate = campaignDetails.startDate, endDate = campaignDetails.endDate, resources = campaignDetails.resources;
                    startDate = parseInt(startDate);
                    endDate = parseInt(endDate);
                    return [4 /*yield*/, createRelatedEntity(resources, tenantId, projectId, startDate, endDate, resouceBody)];
                case 2:
                    _c.sent();
                    _c.label = 3;
                case 3:
                    _i++;
                    return [3 /*break*/, 1];
                case 4: return [2 /*return*/];
            }
        });
    });
}
exports.createRelatedResouce = createRelatedResouce;
function createBoundaryEntities(request, boundaryMap) {
    var _a, _b;
    return __awaiter(this, void 0, void 0, function () {
        var requestBody, boundaries_2, boundaryCodes_1, boundaryEntityResponse, codesFromResponse, codeSet_1, response, error_8;
        var _this = this;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    _c.trys.push([0, 5, , 6]);
                    requestBody = { "RequestInfo": request.body.RequestInfo };
                    boundaries_2 = [];
                    boundaryCodes_1 = [];
                    Array.from(boundaryMap.entries()).forEach(function (_a) {
                        var boundaryCode = _a[1];
                        boundaryCodes_1.push(boundaryCode);
                    });
                    return [4 /*yield*/, (0, request_1.httpRequest)(config_1.default.host.boundaryHost + config_1.default.paths.boundaryServiceSearch, request.body, { tenantId: (_b = (_a = request === null || request === void 0 ? void 0 : request.body) === null || _a === void 0 ? void 0 : _a.ResourceDetails) === null || _b === void 0 ? void 0 : _b.tenantId, codes: boundaryCodes_1.join(', ') })];
                case 1:
                    boundaryEntityResponse = _c.sent();
                    codesFromResponse = boundaryEntityResponse.Boundary.map(function (boundary) { return boundary.code; });
                    codeSet_1 = new Set(codesFromResponse);
                    Array.from(boundaryMap.entries()).forEach(function (_a) {
                        var boundaryName = _a[0], boundaryCode = _a[1];
                        return __awaiter(_this, void 0, void 0, function () {
                            var boundary;
                            var _b, _c;
                            return __generator(this, function (_d) {
                                boundary = {
                                    tenantId: (_c = (_b = request === null || request === void 0 ? void 0 : request.body) === null || _b === void 0 ? void 0 : _b.ResourceDetails) === null || _c === void 0 ? void 0 : _c.tenantId,
                                    code: boundaryCode,
                                    geometry: null,
                                    additionalDetails: {
                                        name: boundaryName
                                    }
                                };
                                if (!codeSet_1.has(boundaryCode)) {
                                    boundaries_2.push(boundary);
                                }
                                return [2 /*return*/];
                            });
                        });
                    });
                    if (!!(boundaries_2.length === 0)) return [3 /*break*/, 3];
                    requestBody.Boundary = boundaries_2;
                    return [4 /*yield*/, (0, request_1.httpRequest)("".concat(config_1.default.host.boundaryHost, "boundary-service/boundary/_create"), requestBody, {}, 'POST')];
                case 2:
                    response = _c.sent();
                    console.log('Boundary entities created:', response);
                    return [3 /*break*/, 4];
                case 3: throw Error("Boundary present in the system");
                case 4: return [3 /*break*/, 6];
                case 5:
                    error_8 = _c.sent();
                    console.error('Error creating boundary entities:', error_8);
                    throw Error('Error creating boundary entities: Boundary already present in the system'); // Throw the error to the calling function
                case 6: return [2 /*return*/];
            }
        });
    });
}
exports.createBoundaryEntities = createBoundaryEntities;
function createBoundaryRelationship(request, boundaryTypeMap, modifiedChildParentMap) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;
    if (boundaryTypeMap === void 0) { boundaryTypeMap = {}; }
    return __awaiter(this, void 0, void 0, function () {
        var requestBody, url, params, boundaryRelationshipResponse, boundaryData, allCodes, flag, _i, _o, _p, boundaryCode, boundaryType, boundary, response, error_9;
        return __generator(this, function (_q) {
            switch (_q.label) {
                case 0:
                    _q.trys.push([0, 7, , 8]);
                    requestBody = { "RequestInfo": request.body.RequestInfo };
                    url = "".concat(config_1.default.host.boundaryHost).concat(config_1.default.paths.boundaryRelationship);
                    params = {
                        "type": (_b = (_a = request === null || request === void 0 ? void 0 : request.body) === null || _a === void 0 ? void 0 : _a.ResourceDetails) === null || _b === void 0 ? void 0 : _b.type,
                        "tenantId": (_d = (_c = request === null || request === void 0 ? void 0 : request.body) === null || _c === void 0 ? void 0 : _c.ResourceDetails) === null || _d === void 0 ? void 0 : _d.tenantId,
                        "boundaryType": null,
                        "codes": null,
                        "includeChildren": true,
                        "hierarchyType": (_f = (_e = request === null || request === void 0 ? void 0 : request.body) === null || _e === void 0 ? void 0 : _e.ResourceDetails) === null || _f === void 0 ? void 0 : _f.hierarchyType
                    };
                    return [4 /*yield*/, (0, request_1.httpRequest)(url, request.body, params)];
                case 1:
                    boundaryRelationshipResponse = _q.sent();
                    boundaryData = (_h = (_g = boundaryRelationshipResponse === null || boundaryRelationshipResponse === void 0 ? void 0 : boundaryRelationshipResponse.TenantBoundary) === null || _g === void 0 ? void 0 : _g[0]) === null || _h === void 0 ? void 0 : _h.boundary;
                    allCodes = (0, index_1.extractCodesFromBoundaryRelationshipResponse)(boundaryData);
                    flag = 1;
                    _i = 0, _o = Object.entries(boundaryTypeMap);
                    _q.label = 2;
                case 2:
                    if (!(_i < _o.length)) return [3 /*break*/, 6];
                    _p = _o[_i], boundaryCode = _p[0], boundaryType = _p[1];
                    boundary = {
                        tenantId: (_k = (_j = request === null || request === void 0 ? void 0 : request.body) === null || _j === void 0 ? void 0 : _j.ResourceDetails) === null || _k === void 0 ? void 0 : _k.tenantId,
                        boundaryType: boundaryType,
                        code: boundaryCode,
                        hierarchyType: (_m = (_l = request === null || request === void 0 ? void 0 : request.body) === null || _l === void 0 ? void 0 : _l.ResourceDetails) === null || _m === void 0 ? void 0 : _m.hierarchyType,
                        parent: modifiedChildParentMap.get(boundaryCode)
                    };
                    if (!!allCodes.has(boundaryCode)) return [3 /*break*/, 4];
                    flag = 0;
                    requestBody.BoundaryRelationship = boundary;
                    return [4 /*yield*/, (0, request_1.httpRequest)("".concat(config_1.default.host.boundaryHost, "boundary-service/boundary-relationships/_create"), requestBody, {}, 'POST')];
                case 3:
                    response = _q.sent();
                    console.log('Boundary relationship created:', response);
                    return [3 /*break*/, 5];
                case 4: return [3 /*break*/, 5];
                case 5:
                    _i++;
                    return [3 /*break*/, 2];
                case 6:
                    if (flag) {
                        throw Error("Boundary already exist in the system");
                    }
                    return [3 /*break*/, 8];
                case 7:
                    error_9 = _q.sent();
                    console.error('Error creating boundary relationship:', error_9);
                    throw new Error('Error creating boundary relationship: Boundary already exist in the system');
                case 8: return [2 /*return*/];
            }
        });
    });
}
exports.createBoundaryRelationship = createBoundaryRelationship;
function enrichCampaign(requestBody) {
    var _a, _b;
    return __awaiter(this, void 0, void 0, function () {
        var _c, _i, _d, campaignDetails;
        return __generator(this, function (_e) {
            switch (_e.label) {
                case 0:
                    if (!(requestBody === null || requestBody === void 0 ? void 0 : requestBody.Campaign)) return [3 /*break*/, 2];
                    requestBody.Campaign.id = (0, uuid_1.v4)();
                    _c = requestBody.Campaign;
                    return [4 /*yield*/, getCampaignNumber(requestBody, config_1.default.values.idgen.format, config_1.default.values.idgen.idName, (_a = requestBody === null || requestBody === void 0 ? void 0 : requestBody.Campaign) === null || _a === void 0 ? void 0 : _a.tenantId)];
                case 1:
                    _c.campaignNo = _e.sent();
                    for (_i = 0, _d = (_b = requestBody === null || requestBody === void 0 ? void 0 : requestBody.Campaign) === null || _b === void 0 ? void 0 : _b.CampaignDetails; _i < _d.length; _i++) {
                        campaignDetails = _d[_i];
                        campaignDetails.id = (0, uuid_1.v4)();
                    }
                    _e.label = 2;
                case 2: return [2 /*return*/];
            }
        });
    });
}
exports.enrichCampaign = enrichCampaign;
function getAllFacilitiesInLoop(searchedFacilities, facilitySearchParams, facilitySearchBody) {
    return __awaiter(this, void 0, void 0, function () {
        var response;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, new Promise(function (resolve) { return setTimeout(resolve, 3000); })];
                case 1:
                    _a.sent(); // Wait for 3 seconds
                    logger_1.logger.info("facilitySearchParams : " + JSON.stringify(facilitySearchParams));
                    return [4 /*yield*/, (0, request_1.httpRequest)(config_1.default.host.facilityHost + config_1.default.paths.facilitySearch, facilitySearchBody, facilitySearchParams)];
                case 2:
                    response = _a.sent();
                    if (Array.isArray(response === null || response === void 0 ? void 0 : response.Facilities)) {
                        searchedFacilities.push.apply(searchedFacilities, response === null || response === void 0 ? void 0 : response.Facilities);
                        return [2 /*return*/, response.Facilities.length >= 50]; // Return true if there are more facilities to fetch, false otherwise
                    }
                    else {
                        throw new Error("Search failed for Facility. Check Logs");
                    }
                    return [2 /*return*/];
            }
        });
    });
}
function getAllFacilities(tenantId, requestBody) {
    var _a;
    return __awaiter(this, void 0, void 0, function () {
        var facilitySearchBody, facilitySearchParams, searchedFacilities, searchAgain;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    facilitySearchBody = {
                        RequestInfo: requestBody === null || requestBody === void 0 ? void 0 : requestBody.RequestInfo,
                        Facility: { isPermanent: true }
                    };
                    facilitySearchParams = {
                        limit: 50,
                        offset: 0,
                        tenantId: (_a = tenantId === null || tenantId === void 0 ? void 0 : tenantId.split('.')) === null || _a === void 0 ? void 0 : _a[0]
                    };
                    logger_1.logger.info("Facility search url : " + config_1.default.host.facilityHost + config_1.default.paths.facilitySearch);
                    logger_1.logger.info("facilitySearchBody : " + JSON.stringify(facilitySearchBody));
                    searchedFacilities = [];
                    searchAgain = true;
                    _b.label = 1;
                case 1:
                    if (!searchAgain) return [3 /*break*/, 3];
                    return [4 /*yield*/, getAllFacilitiesInLoop(searchedFacilities, facilitySearchParams, facilitySearchBody)];
                case 2:
                    searchAgain = _b.sent();
                    facilitySearchParams.offset += 50;
                    return [3 /*break*/, 1];
                case 3: return [2 /*return*/, searchedFacilities];
            }
        });
    });
}
exports.getAllFacilities = getAllFacilities;
function getFacilitiesViaIds(tenantId, ids, requestBody) {
    var _a;
    return __awaiter(this, void 0, void 0, function () {
        var facilitySearchBody, facilitySearchParams, searchedFacilities, i, chunkIds;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    facilitySearchBody = {
                        RequestInfo: requestBody === null || requestBody === void 0 ? void 0 : requestBody.RequestInfo,
                        Facility: {}
                    };
                    facilitySearchParams = {
                        limit: 50,
                        offset: 0,
                        tenantId: (_a = tenantId === null || tenantId === void 0 ? void 0 : tenantId.split('.')) === null || _a === void 0 ? void 0 : _a[0]
                    };
                    logger_1.logger.info("Facility search url : " + config_1.default.host.facilityHost + config_1.default.paths.facilitySearch);
                    searchedFacilities = [];
                    i = 0;
                    _b.label = 1;
                case 1:
                    if (!(i < ids.length)) return [3 /*break*/, 4];
                    chunkIds = ids.slice(i, i + 50);
                    facilitySearchBody.Facility.id = chunkIds;
                    logger_1.logger.info("facilitySearchBody : " + JSON.stringify(facilitySearchBody));
                    return [4 /*yield*/, getAllFacilitiesInLoop(searchedFacilities, facilitySearchParams, facilitySearchBody)];
                case 2:
                    _b.sent();
                    _b.label = 3;
                case 3:
                    i += 50;
                    return [3 /*break*/, 1];
                case 4: return [2 /*return*/, searchedFacilities];
            }
        });
    });
}
exports.getFacilitiesViaIds = getFacilitiesViaIds;
function getParamsViaElements(elements, request) {
    var params = {};
    if (!elements) {
        return params;
    }
    for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {
        var element = elements_1[_i];
        if (element === null || element === void 0 ? void 0 : element.isInParams) {
            if (element === null || element === void 0 ? void 0 : element.value) {
                _.set(params, element === null || element === void 0 ? void 0 : element.keyPath, element === null || element === void 0 ? void 0 : element.value);
            }
            else if (element === null || element === void 0 ? void 0 : element.getValueViaPath) {
                _.set(params, element === null || element === void 0 ? void 0 : element.keyPath, _.get(request.body, element === null || element === void 0 ? void 0 : element.getValueViaPath));
            }
        }
    }
    return params;
}
exports.getParamsViaElements = getParamsViaElements;
function changeBodyViaElements(elements, request) {
    if (!elements) {
        return;
    }
    for (var _i = 0, elements_2 = elements; _i < elements_2.length; _i++) {
        var element = elements_2[_i];
        if (element === null || element === void 0 ? void 0 : element.isInBody) {
            if (element === null || element === void 0 ? void 0 : element.value) {
                _.set(request.body, element === null || element === void 0 ? void 0 : element.keyPath, element === null || element === void 0 ? void 0 : element.value);
            }
            else if (element === null || element === void 0 ? void 0 : element.getValueViaPath) {
                _.set(request.body, element === null || element === void 0 ? void 0 : element.keyPath, _.get(request.body, element === null || element === void 0 ? void 0 : element.getValueViaPath));
            }
            else {
                _.set(request.body, element === null || element === void 0 ? void 0 : element.keyPath, {});
            }
        }
    }
}
exports.changeBodyViaElements = changeBodyViaElements;
function changeBodyViaSearchFromSheet(elements, request, dataFromSheet) {
    if (!elements) {
        return;
    }
    for (var _i = 0, elements_3 = elements; _i < elements_3.length; _i++) {
        var element = elements_3[_i];
        var arrayToSearch = [];
        for (var _a = 0, dataFromSheet_1 = dataFromSheet; _a < dataFromSheet_1.length; _a++) {
            var data = dataFromSheet_1[_a];
            if (data[element.sheetColumnName]) {
                arrayToSearch.push(data[element.sheetColumnName]);
            }
        }
        _.set(request.body, element === null || element === void 0 ? void 0 : element.searchPath, arrayToSearch);
    }
}
function updateErrors(newCreatedData, newSearchedData, errors, createAndSearchConfig, activity) {
    newCreatedData.forEach(function (createdElement) {
        var foundMatch = false;
        for (var _i = 0, newSearchedData_1 = newSearchedData; _i < newSearchedData_1.length; _i++) {
            var searchedElement = newSearchedData_1[_i];
            var match = true;
            for (var key in createdElement) {
                if (createdElement.hasOwnProperty(key) && !searchedElement.hasOwnProperty(key) && key != '!row#number!') {
                    match = false;
                    break;
                }
                if (createdElement[key] !== searchedElement[key] && key != '!row#number!') {
                    match = false;
                    break;
                }
            }
            if (match) {
                foundMatch = true;
                newSearchedData.splice(newSearchedData.indexOf(searchedElement), 1);
                errors.push({ status: "PERSISTED", rowNumber: createdElement["!row#number!"], isUniqueIdentifier: true, uniqueIdentifier: searchedElement[createAndSearchConfig.uniqueIdentifier], errorDetails: "" });
                break;
            }
        }
        if (!foundMatch) {
            errors.push({ status: "NOT_PERSISTED", rowNumber: createdElement["!row#number!"], errorDetails: "Can't confirm persistence of this data" });
            activity.status = 2001; // means not persisted
            logger_1.logger.info("Can't confirm persistence of this data of row number : " + createdElement["!row#number!"]);
        }
    });
}
function matchCreatedAndSearchedData(createdData, searchedData, request, createAndSearchConfig, activity) {
    var _a, _b, _c, _d;
    var newCreatedData = JSON.parse(JSON.stringify(createdData));
    var newSearchedData = JSON.parse(JSON.stringify(searchedData));
    var uid = createAndSearchConfig.uniqueIdentifier;
    newCreatedData.forEach(function (element) {
        delete element[uid];
    });
    var errors = [];
    updateErrors(newCreatedData, newSearchedData, errors, createAndSearchConfig, activity);
    request.body.sheetErrorDetails = ((_a = request === null || request === void 0 ? void 0 : request.body) === null || _a === void 0 ? void 0 : _a.sheetErrorDetails) ? __spreadArray(__spreadArray([], (_b = request === null || request === void 0 ? void 0 : request.body) === null || _b === void 0 ? void 0 : _b.sheetErrorDetails, true), errors, true) : errors;
    request.body.Activities = __spreadArray(__spreadArray([], (((_c = request === null || request === void 0 ? void 0 : request.body) === null || _c === void 0 ? void 0 : _c.Activities) ? (_d = request === null || request === void 0 ? void 0 : request.body) === null || _d === void 0 ? void 0 : _d.Activities : []), true), [activity], false);
}
function matchViaUserIdAndCreationTime(createdData, searchedData, request, creationTime, createAndSearchConfig, activity) {
    var _a, _b, _c, _d, _e;
    var matchingSearchData = [];
    var userUuid = (_c = (_b = (_a = request === null || request === void 0 ? void 0 : request.body) === null || _a === void 0 ? void 0 : _a.RequestInfo) === null || _b === void 0 ? void 0 : _b.userInfo) === null || _c === void 0 ? void 0 : _c.uuid;
    var count = 0;
    for (var _i = 0, searchedData_1 = searchedData; _i < searchedData_1.length; _i++) {
        var data = searchedData_1[_i];
        if (((_d = data === null || data === void 0 ? void 0 : data.auditDetails) === null || _d === void 0 ? void 0 : _d.createdBy) == userUuid && ((_e = data === null || data === void 0 ? void 0 : data.auditDetails) === null || _e === void 0 ? void 0 : _e.createdTime) >= creationTime) {
            matchingSearchData.push(data);
            count++;
        }
    }
    if (count < createdData.length) {
        request.body.ResourceDetails.status = "PERSISTER_ERROR";
    }
    matchCreatedAndSearchedData(createdData, matchingSearchData, request, createAndSearchConfig, activity);
    logger_1.logger.info("New created resources count : " + count);
}
function processSearch(createAndSearchConfig, request, params) {
    var _a;
    return __awaiter(this, void 0, void 0, function () {
        var arraysToMatch;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    setSearchLimits(createAndSearchConfig, request, params);
                    logger_1.logger.info("Search url : " + ((_a = createAndSearchConfig === null || createAndSearchConfig === void 0 ? void 0 : createAndSearchConfig.searchDetails) === null || _a === void 0 ? void 0 : _a.url));
                    return [4 /*yield*/, performSearch(createAndSearchConfig, request, params)];
                case 1:
                    arraysToMatch = _b.sent();
                    return [2 /*return*/, arraysToMatch];
            }
        });
    });
}
function setSearchLimits(createAndSearchConfig, request, params) {
    var _a, _b;
    setLimitOrOffset((_a = createAndSearchConfig === null || createAndSearchConfig === void 0 ? void 0 : createAndSearchConfig.searchDetails) === null || _a === void 0 ? void 0 : _a.searchLimit, params, request.body);
    setLimitOrOffset((_b = createAndSearchConfig === null || createAndSearchConfig === void 0 ? void 0 : createAndSearchConfig.searchDetails) === null || _b === void 0 ? void 0 : _b.searchOffset, params, request.body);
}
function setLimitOrOffset(limitOrOffsetConfig, params, requestBody) {
    if (limitOrOffsetConfig) {
        if (limitOrOffsetConfig === null || limitOrOffsetConfig === void 0 ? void 0 : limitOrOffsetConfig.isInParams) {
            _.set(params, limitOrOffsetConfig === null || limitOrOffsetConfig === void 0 ? void 0 : limitOrOffsetConfig.keyPath, parseInt(limitOrOffsetConfig === null || limitOrOffsetConfig === void 0 ? void 0 : limitOrOffsetConfig.value));
        }
        if (limitOrOffsetConfig === null || limitOrOffsetConfig === void 0 ? void 0 : limitOrOffsetConfig.isInBody) {
            _.set(requestBody, limitOrOffsetConfig === null || limitOrOffsetConfig === void 0 ? void 0 : limitOrOffsetConfig.keyPath, parseInt(limitOrOffsetConfig === null || limitOrOffsetConfig === void 0 ? void 0 : limitOrOffsetConfig.value));
        }
    }
}
function performSearch(createAndSearchConfig, request, params) {
    var _a, _b, _c, _d, _e;
    return __awaiter(this, void 0, void 0, function () {
        var arraysToMatch, searchAgain, response, resultArray;
        return __generator(this, function (_f) {
            switch (_f.label) {
                case 0:
                    arraysToMatch = [];
                    searchAgain = true;
                    _f.label = 1;
                case 1:
                    if (!searchAgain) return [3 /*break*/, 4];
                    logger_1.logger.info("Search url : " + ((_a = createAndSearchConfig === null || createAndSearchConfig === void 0 ? void 0 : createAndSearchConfig.searchDetails) === null || _a === void 0 ? void 0 : _a.url));
                    logger_1.logger.info("Search params : " + JSON.stringify(params));
                    logger_1.logger.info("Search body : " + JSON.stringify(request.body));
                    return [4 /*yield*/, (0, request_1.httpRequest)((_b = createAndSearchConfig === null || createAndSearchConfig === void 0 ? void 0 : createAndSearchConfig.searchDetails) === null || _b === void 0 ? void 0 : _b.url, request.body, params)];
                case 2:
                    response = _f.sent();
                    resultArray = _.get(response, (_c = createAndSearchConfig === null || createAndSearchConfig === void 0 ? void 0 : createAndSearchConfig.searchDetails) === null || _c === void 0 ? void 0 : _c.searchPath);
                    if (resultArray && Array.isArray(resultArray)) {
                        arraysToMatch.push.apply(arraysToMatch, resultArray);
                        if (resultArray.length < parseInt((_e = (_d = createAndSearchConfig === null || createAndSearchConfig === void 0 ? void 0 : createAndSearchConfig.searchDetails) === null || _d === void 0 ? void 0 : _d.searchLimit) === null || _e === void 0 ? void 0 : _e.value)) {
                            searchAgain = false;
                        }
                    }
                    else {
                        searchAgain = false;
                    }
                    updateOffset(createAndSearchConfig, params, request.body);
                    return [4 /*yield*/, new Promise(function (resolve) { return setTimeout(resolve, 5000); })];
                case 3:
                    _f.sent();
                    return [3 /*break*/, 1];
                case 4: return [2 /*return*/, arraysToMatch];
            }
        });
    });
}
function updateOffset(createAndSearchConfig, params, requestBody) {
    var _a, _b, _c;
    var offsetConfig = (_a = createAndSearchConfig === null || createAndSearchConfig === void 0 ? void 0 : createAndSearchConfig.searchDetails) === null || _a === void 0 ? void 0 : _a.searchOffset;
    var limit = (_c = (_b = createAndSearchConfig === null || createAndSearchConfig === void 0 ? void 0 : createAndSearchConfig.searchDetails) === null || _b === void 0 ? void 0 : _b.searchLimit) === null || _c === void 0 ? void 0 : _c.value;
    if (offsetConfig) {
        if (offsetConfig === null || offsetConfig === void 0 ? void 0 : offsetConfig.isInParams) {
            _.set(params, offsetConfig === null || offsetConfig === void 0 ? void 0 : offsetConfig.keyPath, parseInt(_.get(params, offsetConfig === null || offsetConfig === void 0 ? void 0 : offsetConfig.keyPath) + parseInt(limit)));
        }
        if (offsetConfig === null || offsetConfig === void 0 ? void 0 : offsetConfig.isInBody) {
            _.set(requestBody, offsetConfig === null || offsetConfig === void 0 ? void 0 : offsetConfig.keyPath, parseInt(_.get(requestBody, offsetConfig === null || offsetConfig === void 0 ? void 0 : offsetConfig.keyPath) + parseInt(limit)));
        }
    }
}
function processSearchAndValidation(request, createAndSearchConfig, dataFromSheet) {
    var _a, _b;
    return __awaiter(this, void 0, void 0, function () {
        var params, arraysToMatch;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    params = getParamsViaElements((_a = createAndSearchConfig === null || createAndSearchConfig === void 0 ? void 0 : createAndSearchConfig.searchDetails) === null || _a === void 0 ? void 0 : _a.searchElements, request);
                    changeBodyViaElements((_b = createAndSearchConfig === null || createAndSearchConfig === void 0 ? void 0 : createAndSearchConfig.searchDetails) === null || _b === void 0 ? void 0 : _b.searchElements, request);
                    changeBodyViaSearchFromSheet(createAndSearchConfig === null || createAndSearchConfig === void 0 ? void 0 : createAndSearchConfig.requiresToSearchFromSheet, request, dataFromSheet);
                    return [4 /*yield*/, processSearch(createAndSearchConfig, request, params)];
                case 1:
                    arraysToMatch = _c.sent();
                    (0, index_1.matchData)(request, request.body.dataToSearch, arraysToMatch, createAndSearchConfig);
                    return [2 /*return*/];
            }
        });
    });
}
function confirmCreation(createAndSearchConfig, request, facilityCreateData, creationTime, activity) {
    var _a, _b;
    return __awaiter(this, void 0, void 0, function () {
        var params, arraysToMatch;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0: 
                // wait for 5 seconds
                return [4 /*yield*/, new Promise(function (resolve) { return setTimeout(resolve, 5000); })];
                case 1:
                    // wait for 5 seconds
                    _c.sent();
                    params = getParamsViaElements((_a = createAndSearchConfig === null || createAndSearchConfig === void 0 ? void 0 : createAndSearchConfig.searchDetails) === null || _a === void 0 ? void 0 : _a.searchElements, request);
                    changeBodyViaElements((_b = createAndSearchConfig === null || createAndSearchConfig === void 0 ? void 0 : createAndSearchConfig.searchDetails) === null || _b === void 0 ? void 0 : _b.searchElements, request);
                    return [4 /*yield*/, processSearch(createAndSearchConfig, request, params)];
                case 2:
                    arraysToMatch = _c.sent();
                    matchViaUserIdAndCreationTime(facilityCreateData, arraysToMatch, request, creationTime, createAndSearchConfig, activity);
                    return [2 /*return*/];
            }
        });
    });
}
exports.confirmCreation = confirmCreation;
function processValidate(request) {
    var _a, _b, _c, _d;
    return __awaiter(this, void 0, void 0, function () {
        var type, createAndSearchConfig, dataFromSheet, typeData;
        return __generator(this, function (_e) {
            switch (_e.label) {
                case 0:
                    type = request.body.ResourceDetails.type;
                    createAndSearchConfig = createAndSearch_1.default[type];
                    return [4 /*yield*/, (0, index_1.getDataFromSheet)((_b = (_a = request === null || request === void 0 ? void 0 : request.body) === null || _a === void 0 ? void 0 : _a.ResourceDetails) === null || _b === void 0 ? void 0 : _b.fileStoreId, (_d = (_c = request === null || request === void 0 ? void 0 : request.body) === null || _c === void 0 ? void 0 : _c.ResourceDetails) === null || _d === void 0 ? void 0 : _d.tenantId, createAndSearchConfig)];
                case 1:
                    dataFromSheet = _e.sent();
                    return [4 /*yield*/, (0, campaignValidators_1.validateSheetData)(dataFromSheet, request, createAndSearchConfig === null || createAndSearchConfig === void 0 ? void 0 : createAndSearchConfig.sheetSchema, createAndSearchConfig === null || createAndSearchConfig === void 0 ? void 0 : createAndSearchConfig.boundaryValidation)];
                case 2:
                    _e.sent();
                    typeData = (0, index_1.convertToTypeData)(dataFromSheet, createAndSearchConfig, request.body);
                    request.body.dataToSearch = typeData.searchData;
                    return [4 /*yield*/, processSearchAndValidation(request, createAndSearchConfig, dataFromSheet)];
                case 3:
                    _e.sent();
                    return [2 /*return*/];
            }
        });
    });
}
function performAndSaveResourceActivity(request, createAndSearchConfig, params, type) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
    return __awaiter(this, void 0, void 0, function () {
        var limit, dataToCreate, chunks, i, start, end, chunkData, creationTime, newRequestBody, responsePayload, activity;
        return __generator(this, function (_l) {
            switch (_l.label) {
                case 0:
                    logger_1.logger.info(type + " create data : " + JSON.stringify((_a = request === null || request === void 0 ? void 0 : request.body) === null || _a === void 0 ? void 0 : _a.dataToCreate));
                    logger_1.logger.info(type + " bulk create url : " + ((_b = createAndSearchConfig === null || createAndSearchConfig === void 0 ? void 0 : createAndSearchConfig.createBulkDetails) === null || _b === void 0 ? void 0 : _b.url), params);
                    if (!((_c = createAndSearchConfig === null || createAndSearchConfig === void 0 ? void 0 : createAndSearchConfig.createBulkDetails) === null || _c === void 0 ? void 0 : _c.limit)) return [3 /*break*/, 6];
                    limit = (_d = createAndSearchConfig === null || createAndSearchConfig === void 0 ? void 0 : createAndSearchConfig.createBulkDetails) === null || _d === void 0 ? void 0 : _d.limit;
                    dataToCreate = (_e = request === null || request === void 0 ? void 0 : request.body) === null || _e === void 0 ? void 0 : _e.dataToCreate;
                    chunks = Math.ceil(dataToCreate.length / limit);
                    i = 0;
                    _l.label = 1;
                case 1:
                    if (!(i < chunks)) return [3 /*break*/, 6];
                    start = i * limit;
                    end = (i + 1) * limit;
                    chunkData = dataToCreate.slice(start, end);
                    creationTime = Date.now();
                    newRequestBody = JSON.parse(JSON.stringify(request.body));
                    _.set(newRequestBody, (_f = createAndSearchConfig === null || createAndSearchConfig === void 0 ? void 0 : createAndSearchConfig.createBulkDetails) === null || _f === void 0 ? void 0 : _f.createPath, chunkData);
                    return [4 /*yield*/, (0, request_1.httpRequest)((_g = createAndSearchConfig === null || createAndSearchConfig === void 0 ? void 0 : createAndSearchConfig.createBulkDetails) === null || _g === void 0 ? void 0 : _g.url, newRequestBody, params, "post", undefined, undefined, true)];
                case 2:
                    responsePayload = _l.sent();
                    return [4 /*yield*/, (0, index_1.generateActivityMessage)((_j = (_h = request === null || request === void 0 ? void 0 : request.body) === null || _h === void 0 ? void 0 : _h.ResourceDetails) === null || _j === void 0 ? void 0 : _j.tenantId, request.body, newRequestBody, responsePayload, type, (_k = createAndSearchConfig === null || createAndSearchConfig === void 0 ? void 0 : createAndSearchConfig.createBulkDetails) === null || _k === void 0 ? void 0 : _k.url, responsePayload === null || responsePayload === void 0 ? void 0 : responsePayload.statusCode)];
                case 3:
                    activity = _l.sent();
                    return [4 /*yield*/, confirmCreation(createAndSearchConfig, request, chunkData, creationTime, activity)];
                case 4:
                    _l.sent();
                    logger_1.logger.info("Activity : " + JSON.stringify(activity));
                    _l.label = 5;
                case 5:
                    i++;
                    return [3 /*break*/, 1];
                case 6: return [2 /*return*/];
            }
        });
    });
}
function processGenericRequest(request) {
    var _a, _b;
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    if (!(((_b = (_a = request === null || request === void 0 ? void 0 : request.body) === null || _a === void 0 ? void 0 : _a.ResourceDetails) === null || _b === void 0 ? void 0 : _b.action) == "create")) return [3 /*break*/, 2];
                    return [4 /*yield*/, processCreate(request)];
                case 1:
                    _c.sent();
                    return [3 /*break*/, 4];
                case 2: return [4 /*yield*/, processValidate(request)];
                case 3:
                    _c.sent();
                    _c.label = 4;
                case 4: return [2 /*return*/];
            }
        });
    });
}
exports.processGenericRequest = processGenericRequest;
function processCreate(request) {
    var _a, _b, _c, _d, _e, _f, _g, _h;
    return __awaiter(this, void 0, void 0, function () {
        var type, createAndSearchConfig, dataFromSheet, typeData, params;
        return __generator(this, function (_j) {
            switch (_j.label) {
                case 0:
                    type = request.body.ResourceDetails.type;
                    createAndSearchConfig = createAndSearch_1.default[type];
                    return [4 /*yield*/, (0, index_1.getDataFromSheet)((_b = (_a = request === null || request === void 0 ? void 0 : request.body) === null || _a === void 0 ? void 0 : _a.ResourceDetails) === null || _b === void 0 ? void 0 : _b.fileStoreId, (_d = (_c = request === null || request === void 0 ? void 0 : request.body) === null || _c === void 0 ? void 0 : _c.ResourceDetails) === null || _d === void 0 ? void 0 : _d.tenantId, createAndSearchConfig)];
                case 1:
                    dataFromSheet = _j.sent();
                    return [4 /*yield*/, (0, campaignValidators_1.validateSheetData)(dataFromSheet, request, createAndSearchConfig === null || createAndSearchConfig === void 0 ? void 0 : createAndSearchConfig.sheetSchema, createAndSearchConfig === null || createAndSearchConfig === void 0 ? void 0 : createAndSearchConfig.boundaryValidation)];
                case 2:
                    _j.sent();
                    typeData = (0, index_1.convertToTypeData)(dataFromSheet, createAndSearchConfig, request.body);
                    request.body.dataToCreate = typeData.createData;
                    request.body.dataToSearch = typeData.searchData;
                    return [4 /*yield*/, processSearchAndValidation(request, createAndSearchConfig, dataFromSheet)];
                case 3:
                    _j.sent();
                    if (!(createAndSearchConfig === null || createAndSearchConfig === void 0 ? void 0 : createAndSearchConfig.createBulkDetails)) return [3 /*break*/, 5];
                    _.set(request.body, (_e = createAndSearchConfig === null || createAndSearchConfig === void 0 ? void 0 : createAndSearchConfig.createBulkDetails) === null || _e === void 0 ? void 0 : _e.createPath, (_f = request === null || request === void 0 ? void 0 : request.body) === null || _f === void 0 ? void 0 : _f.dataToCreate);
                    params = getParamsViaElements((_g = createAndSearchConfig === null || createAndSearchConfig === void 0 ? void 0 : createAndSearchConfig.createBulkDetails) === null || _g === void 0 ? void 0 : _g.createElements, request);
                    changeBodyViaElements((_h = createAndSearchConfig === null || createAndSearchConfig === void 0 ? void 0 : createAndSearchConfig.createBulkDetails) === null || _h === void 0 ? void 0 : _h.createElements, request);
                    return [4 /*yield*/, performAndSaveResourceActivity(request, createAndSearchConfig, params, type)];
                case 4:
                    _j.sent();
                    _j.label = 5;
                case 5: return [2 /*return*/];
            }
        });
    });
}
exports.processCreate = processCreate;
function createProjectCampaignResourcData(request) {
    var _a, _b, _c, _d, _e, _f;
    return __awaiter(this, void 0, void 0, function () {
        var _i, _g, resource, resourceDetails, error_10;
        return __generator(this, function (_h) {
            switch (_h.label) {
                case 0:
                    if (!(((_b = (_a = request === null || request === void 0 ? void 0 : request.body) === null || _a === void 0 ? void 0 : _a.CampaignDetails) === null || _b === void 0 ? void 0 : _b.action) == "create")) return [3 /*break*/, 6];
                    _i = 0, _g = request.body.CampaignDetails.resources;
                    _h.label = 1;
                case 1:
                    if (!(_i < _g.length)) return [3 /*break*/, 6];
                    resource = _g[_i];
                    resourceDetails = {
                        type: resource.type,
                        fileStoreId: resource.filestoreId,
                        tenantId: (_d = (_c = request === null || request === void 0 ? void 0 : request.body) === null || _c === void 0 ? void 0 : _c.CampaignDetails) === null || _d === void 0 ? void 0 : _d.tenantId,
                        action: "create",
                        hierarchyType: (_f = (_e = request === null || request === void 0 ? void 0 : request.body) === null || _e === void 0 ? void 0 : _e.CampaignDetails) === null || _f === void 0 ? void 0 : _f.hierarchyType,
                        additionalDetails: {}
                    };
                    _h.label = 2;
                case 2:
                    _h.trys.push([2, 4, , 5]);
                    return [4 /*yield*/, (0, request_1.httpRequest)("http://localhost:8080/project-factory/v1/data/_create", { RequestInfo: request.body.RequestInfo, ResourceDetails: resourceDetails })];
                case 3:
                    _h.sent();
                    return [3 /*break*/, 5];
                case 4:
                    error_10 = _h.sent();
                    // Handle error for individual resource creation
                    logger_1.logger.error("Error creating resource: ".concat(error_10));
                    throw new Error(String(error_10));
                case 5:
                    _i++;
                    return [3 /*break*/, 1];
                case 6: return [2 /*return*/];
            }
        });
    });
}
exports.createProjectCampaignResourcData = createProjectCampaignResourcData;
function projectCreate(projectCreateBody, request) {
    var _a, _b, _c, _d, _e, _f;
    return __awaiter(this, void 0, void 0, function () {
        var projectCreateResponse;
        return __generator(this, function (_g) {
            switch (_g.label) {
                case 0:
                    logger_1.logger.info("Project creation url " + config_1.default.host.projectHost + config_1.default.paths.projectCreate);
                    logger_1.logger.info("Project creation body " + JSON.stringify(projectCreateBody));
                    return [4 /*yield*/, (0, request_1.httpRequest)(config_1.default.host.projectHost + config_1.default.paths.projectCreate, projectCreateBody)];
                case 1:
                    projectCreateResponse = _g.sent();
                    logger_1.logger.info("Project creation response" + JSON.stringify(projectCreateResponse));
                    if ((_a = projectCreateResponse === null || projectCreateResponse === void 0 ? void 0 : projectCreateResponse.Project[0]) === null || _a === void 0 ? void 0 : _a.id) {
                        logger_1.logger.info("Project created successfully with id " + JSON.stringify((_b = projectCreateResponse === null || projectCreateResponse === void 0 ? void 0 : projectCreateResponse.Project[0]) === null || _b === void 0 ? void 0 : _b.id));
                        request.body.boundaryProjectMapping[(_e = (_d = (_c = projectCreateBody === null || projectCreateBody === void 0 ? void 0 : projectCreateBody.Projects) === null || _c === void 0 ? void 0 : _c[0]) === null || _d === void 0 ? void 0 : _d.address) === null || _e === void 0 ? void 0 : _e.boundary].projectId = (_f = projectCreateResponse === null || projectCreateResponse === void 0 ? void 0 : projectCreateResponse.Project[0]) === null || _f === void 0 ? void 0 : _f.id;
                    }
                    else {
                        throw new Error("Project creation failed, for the request: " + JSON.stringify(projectCreateBody));
                    }
                    return [2 /*return*/];
            }
        });
    });
}
exports.projectCreate = projectCreate;
